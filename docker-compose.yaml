version: '3.8'
services:
  db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: tms
      MYSQL_USER: tms_user
      MYSQL_PASSWORD: password     
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      timeout: 5s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www/html
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: tms
      DB_USERNAME: tms_user
      DB_PASSWORD: password
      APP_ENV: local
      APP_KEY: base64:your-app-key-here
      APP_DEBUG: "true"
      APP_URL: http://localhost:8000
      SESSION_DRIVER: file
      CACHE_DRIVER: file
      QUEUE_CONNECTION: sync
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    command: >
      sh -c "composer install --optimize-autoloader --no-dev &&
             php artisan key:generate --force &&
             php artisan config:cache &&
             sleep 10 &&
             php artisan migrate:fresh --force &&
             php artisan cache:clear &&
             php artisan config:clear &&
             php artisan view:clear &&
             php artisan route:clear &&
             mkdir -p storage/framework/{sessions,views,cache} &&
             chmod -R 777 storage bootstrap/cache &&
             php artisan serve --host=0.0.0.0 --port=8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
    networks:
      - app-network
    command: npm start

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge